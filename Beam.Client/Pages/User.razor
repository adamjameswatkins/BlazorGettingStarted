@page "/User"
@page "/User/{name}"
@layout UserLayout
@inject IDataService data
@using Beam.Shared

<h2>User Rays</h2>

<RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="List">
                @foreach (var ray in Rays)
                {
                    <p>
                        <RayItem ray="@ray"/>
                    </p>
                }
            </RadzenTabsItem>
            <RadzenTabsItem Text="Grid">
                <RadzenGrid Data="@Rays" TItem="Ray" AllowFiltering="true" AllowPaging="true" PageSize="4" AllowSorting="true">
                    <Columns>
                        <RadzenGridColumn TItem="Ray" Property="RayId" Title="Id"/>
                        <RadzenGridColumn TItem="Ray" Property="Text" Title="Text" Width="400px"/>
                        <RadzenGridColumn TItem="Ray" Property="PrismCount" Title="Times Prismed"/>
                        <RadzenGridColumn TItem="Ray" Property="RayCastDate" Title="Date">
                            <Template Context="item">
                                @item.RayCastDate.ToLocalTime().ToString()
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="Ray" Property="UsersPrismed" Sortable="false" Title="Users who Prismed">
                            <Template Context="item">
                                @foreach(var user in item.UsersPrismed)
                                {
                                    <p>@user</p>
                                }
                            </Template>
                        </RadzenGridColumn>
                    </Columns>
                </RadzenGrid>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Chart">
                <RadzenChart>
                <RadzenLineSeries Smooth="false" Data="@ChartData" CategoryProperty="RayCastDate" Title="Prism Count" LineType="LineType.Dashed" ValueProperty="PrismCount">
                    <RadzenMarkers MarkerType="MarkerType.Square" />
                </RadzenLineSeries>
                <RadzenLineSeries Smooth="false" Data="@ChartData" CategoryProperty="RayCastDate" Title="Ray Length" LineType="LineType.Dashed" ValueProperty="TextLength">
                    <RadzenMarkers MarkerType="MarkerType.Square" />
                </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" FormatString="{0:hh:mm}" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle />
                </RadzenValueAxis>
            </RadzenChart>
            </RadzenTabsItem>
        </Tabs>
</RadzenTabs>



@code
{
    [Parameter]
    public string Name { get; set; }
    List<Ray> Rays = new List<Ray>();
    List<RayChartData> ChartData = new List<RayChartData>();

    protected override void OnInitialized()
    {
        data.UpdatedRays += async () =>
        {
            Rays = await data.GetUserRays(Name);
            StateHasChanged();
        };
    }

    protected override async Task OnParametersSetAsync()
    {
        Rays = await data.GetUserRays(Name);
        ChartData = Rays.Select(r => new RayChartData()
        {
            PrismCount = r.PrismCount,
            TextLength = r.Text.Length,
            RayCastDate = r.RayCastDate
        }).ToList();
    }

    private class RayChartData
    {
        public int TextLength { get; set; }
        public int PrismCount { get; set; }
        public DateTime RayCastDate { get; set; }
    }
}