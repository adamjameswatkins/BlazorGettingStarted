@inject IDataService data

<p>
    <Card Title="Cast a New Ray">
        <EditForm Model="@newRay" OnValidSubmit="CastRay">
        <DataAnnotationsValidator/>
            <div class="input-group">
                <input @bind="newRay.Text" class="form-control" />
                <div class="input-group-append">
                    <button @onclick="ClearText" type="button" class="btn btn-outline-secondary"><span class="oi oi-circle-x"></span></button>
                    <button type="submit" class="btn btn-outline-secondary"><span class="oi oi-audio"></span></button>
                </div>
            </div>
        <ValidationMessage For="@(() => newRay.Text)"/>
        </EditForm>
    </Card>
</p>

@code
{
    [Parameter]
    public NewRay newRay { get; set; } = new NewRay();
    [Parameter]
    public EventCallback<NewRay> newRayChanged { get; set; }
    [Parameter]
    public EventCallback<string> RayCast { get; set; }

    void ClearText()
    {
        newRay.Text = "";
    }

    async Task CastRay()
    {
        var text = newRay.Text;
        newRay.Text = "";
        await RayCast.InvokeAsync(text);
        await data.CreateRay(text);
    }
}